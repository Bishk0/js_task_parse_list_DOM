{"version":3,"sources":["scripts/main.js"],"names":["peopleList","document","querySelector","peopleItems","querySelectorAll","convertSalary","person","dataset","salary","slice","split","join","sortList","list","sort","a","b","append","getEmployees","map","name","innerText"],"mappings":";AAAA,aAsBA,SAAA,EAAA,EAAA,GAAA,IAAA,EAAA,OAAA,KAAA,GAAA,GAAA,OAAA,sBAAA,CAAA,IAAA,EAAA,OAAA,sBAAA,GAAA,IAAA,EAAA,EAAA,OAAA,SAAA,GAAA,OAAA,OAAA,yBAAA,EAAA,GAAA,cAAA,EAAA,KAAA,MAAA,EAAA,GAAA,OAAA,EAAA,SAAA,EAAA,GAAA,IAAA,IAAA,EAAA,EAAA,EAAA,UAAA,OAAA,IAAA,CAAA,IAAA,EAAA,MAAA,UAAA,GAAA,UAAA,GAAA,GAAA,EAAA,EAAA,EAAA,OAAA,IAAA,GAAA,QAAA,SAAA,GAAA,EAAA,EAAA,EAAA,EAAA,MAAA,OAAA,0BAAA,OAAA,iBAAA,EAAA,OAAA,0BAAA,IAAA,EAAA,OAAA,IAAA,QAAA,SAAA,GAAA,OAAA,eAAA,EAAA,EAAA,OAAA,yBAAA,EAAA,MAAA,OAAA,EAAA,SAAA,EAAA,EAAA,EAAA,GAAA,OAAA,KAAA,EAAA,OAAA,eAAA,EAAA,EAAA,CAAA,MAAA,EAAA,YAAA,EAAA,cAAA,EAAA,UAAA,IAAA,EAAA,GAAA,EAAA,EAAA,SAAA,EAAA,GAAA,OAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,IAAA,SAAA,IAAA,MAAA,IAAA,UAAA,wIAAA,SAAA,EAAA,EAAA,GAAA,GAAA,EAAA,CAAA,GAAA,iBAAA,EAAA,OAAA,EAAA,EAAA,GAAA,IAAA,EAAA,OAAA,UAAA,SAAA,KAAA,GAAA,MAAA,GAAA,GAAA,MAAA,WAAA,GAAA,EAAA,cAAA,EAAA,EAAA,YAAA,MAAA,QAAA,GAAA,QAAA,EAAA,MAAA,KAAA,GAAA,cAAA,GAAA,2CAAA,KAAA,GAAA,EAAA,EAAA,QAAA,GAAA,SAAA,EAAA,GAAA,GAAA,oBAAA,QAAA,OAAA,YAAA,OAAA,GAAA,OAAA,MAAA,KAAA,GAAA,SAAA,EAAA,GAAA,GAAA,MAAA,QAAA,GAAA,OAAA,EAAA,GAAA,SAAA,EAAA,EAAA,IAAA,MAAA,GAAA,EAAA,EAAA,UAAA,EAAA,EAAA,QAAA,IAAA,IAAA,EAAA,EAAA,EAAA,IAAA,MAAA,GAAA,EAAA,EAAA,IAAA,EAAA,GAAA,EAAA,GAAA,OAAA,EApBA,IAAMA,EAAaC,SAASC,cAAc,MACpCC,EAAkBF,EAAAA,SAASG,iBAAiB,OAE5CC,EAAgB,SAAAC,GACpB,OAAEA,EAAOC,QAAQC,OAAOC,MAAM,GAAGC,MAAM,KAAKC,KAAK,KAG7CC,EAAW,SAAAC,GAGRb,OAFPa,EAAKC,KAAK,SAACC,EAAGC,GAAMX,OAAAA,EAAcW,GAAKX,EAAcU,KAE9Cf,EAAWiB,OAAXjB,MAAAA,EAAqBG,EAAAA,KAGxBe,EAAe,SAAAL,GAAQA,OAAAA,EAAKM,IAChC,SAAAb,GAAM,OAAA,EAAA,CACJc,KAAMd,EAAOe,WACVf,EAAOC,YAGdK,EAAST,GACTe,EAAaf","file":"main.30bdc0df.js","sourceRoot":"..\\src","sourcesContent":["'use strict';\n\nconst peopleList = document.querySelector('ul');\nconst peopleItems = [...document.querySelectorAll('li')];\n\nconst convertSalary = person => (\n  +(person.dataset.salary.slice(1).split(',').join(''))\n);\n\nconst sortList = list => {\n  list.sort((a, b) => convertSalary(b) - convertSalary(a));\n\n  return peopleList.append(...peopleItems);\n};\n\nconst getEmployees = list => list.map(\n  person => ({\n    name: person.innerText,\n    ...person.dataset,\n  }));\n\nsortList(peopleItems);\ngetEmployees(peopleItems);\n"]}